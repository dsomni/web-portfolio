---
// src/components/common/LanguageSwitcher.astro
import { getRelativeLocaleUrl } from "astro:i18n";
import { languages, type Language } from "../../utils/i18n";

// Use Astro.currentLocale instead of prop - this is more reliable
const currentLang = (Astro.currentLocale || "en") as Language;
const altLang: Language = currentLang === "en" ? "ru" : "en";

// Get current pathname
let currentPath = Astro.url.pathname;

// Remove base path if present
const basePath = import.meta.env.BASE_URL;
if (basePath && basePath !== "/" && currentPath.startsWith(basePath)) {
  currentPath = currentPath.substring(basePath.length);
  if (!currentPath.startsWith("/")) {
    currentPath = "/" + currentPath;
  }
}

// Remove locale prefix (only /ru/ since en has no prefix)
if (currentPath.startsWith("/ru/")) {
  currentPath = currentPath.substring(3);
  if (!currentPath.startsWith("/")) {
    currentPath = "/" + currentPath;
  }
} else if (currentPath === "/ru") {
  currentPath = "/";
}

// Generate alternate URL
let altUrl = getRelativeLocaleUrl(altLang, currentPath);

// Remove trailing slash if not root
if (altUrl.endsWith("/") && altUrl.length > 1) {
  altUrl = altUrl.slice(0, -1);
}
---

<a
  href={altUrl}
  id="language-switcher"
  class="relative p-2 rounded-lg bg-light-elevated dark:bg-dark-elevated text-light-text dark:text-dark-text hover:bg-primary-100 dark:hover:bg-primary-900/30 transition-all focus:outline-none focus:ring-2 focus:ring-primary-500 flex items-center gap-2 text-sm font-medium"
  aria-label={`Switch to ${languages[altLang]}`}
>
  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"
    ></path>
  </svg>
  <span class="hidden sm:inline">{altLang.toUpperCase()}</span>
</a>

<script>
  function setupLanguageSwitcher() {
    const switcher = document.getElementById("language-switcher");
    if (!switcher) return;

    const handleClick = (e: Event) => {
      e.preventDefault();

      const link = e.currentTarget as HTMLAnchorElement;
      let targetUrl = link.getAttribute("href");
      if (!targetUrl) return;

      // Save scroll position
      sessionStorage.setItem("scrollPos", window.scrollY.toString());

      // Preserve hash fragment if it exists
      const currentHash = window.location.hash;

      // Add hash if it exists and targetUrl doesn't already have one
      if (currentHash && !targetUrl.includes("#")) {
        targetUrl = targetUrl + currentHash;
      }

      // Navigate to new URL
      window.location.href = targetUrl;
    };

    // Remove old listener to avoid duplicates
    const newSwitcher = switcher.cloneNode(true) as HTMLElement;
    switcher.parentNode?.replaceChild(newSwitcher, switcher);

    // Add listener to new element
    const finalSwitcher = document.getElementById("language-switcher");
    if (finalSwitcher) {
      finalSwitcher.addEventListener("click", handleClick);
    }
  }

  // Setup on page load
  setupLanguageSwitcher();

  // Re-setup after ClientRouter navigation
  document.addEventListener("astro:page-load", setupLanguageSwitcher);
</script>
