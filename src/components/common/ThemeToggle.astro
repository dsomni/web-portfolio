---
import { Icon } from "astro-icon/components";
---

<theme-toggle>
  <button
    id="theme-toggle"
    class="relative p-2 rounded-lg text-light-text dark:text-dark-text hover:bg-primary-100 dark:hover:bg-primary-900/30 transition-all focus:outline-none focus:ring-2 focus:ring-primary-500"
    aria-label="Toggle theme"
    type="button"
  >
    <Icon
      fill="none"
      class="w-5 h-5 hidden dark:block"
      name="mdi:white-balance-sunny"
    />
    <Icon
      fill="none"
      class="w-5 h-5 block dark:hidden"
      name="mdi:moon-and-stars"
    />
  </button>
</theme-toggle>

<script>
  class ThemeToggle extends HTMLElement {
    connectedCallback() {
      const button = this.querySelector("#theme-toggle");
      if (!button) return;

      // Handler for toggle click
      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      };

      // Add click event listener
      button.addEventListener("click", handleToggleClick);
    }
  }

  // Define the custom element
  // Check if it's not already defined to avoid errors on hot reload
  if (!customElements.get("theme-toggle")) {
    customElements.define("theme-toggle", ThemeToggle);
  }
</script>

<style>
  /* Make the web component behave like inline */
  theme-toggle {
    display: contents;
  }
</style>
