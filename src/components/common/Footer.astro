---
import {
  useTranslations,
  type Language,
  type Translations,
} from "../../utils/i18n";
import { localizedUrl, url } from "../../utils/url";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslations(lang);

let social = await getCollection("social");
social = social.sort(
  (a: any, b: any) => (a.data.order ?? 999) - (b.data.order ?? 999)
);

// Define your links once
const quickLinks: { locale_key: keyof Translations; href: string }[] = [
  { locale_key: "nav.home", href: "/" },
  { locale_key: "nav.projects", href: "/#projects" },
  { locale_key: "nav.about", href: "/#about" },
  { locale_key: "nav.contact", href: "/#contact" },
];

const currentYear = new Date().getFullYear();
---

<footer
  class="mt-20 border-t border-light-border dark:border-dark-border bg-light-surface dark:bg-dark-surface"
>
  <div class="container-custom py-12">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      <div class="space-y-4">
        <div class="flex items-center gap-2">
          <img
            src={url("/images/logo.svg")}
            alt="logo"
            class="w-10 h-10 group-hover:scale-110 transition-transform"
            loading="eager"
          />
          <span class="font-bold text-lg">{t("personal.fullname")}</span>
        </div>
        <p class="text-sm text-light-text-muted dark:text-dark-text-muted">
          {t("personal.specialty")}
        </p>
      </div>

      <!-- Quick Links -->
      <div class="space-y-4">
        <h3
          class="font-semibold text-sm uppercase tracking-wider text-light-text dark:text-dark-text"
        >
          {t("footer.quickLinks")}
        </h3>
        <ul class="space-y-2">
          {
            quickLinks.map((link) => (
              <li>
                <a
                  href={localizedUrl(lang, link.href)}
                  class="text-sm text-light-text-muted dark:text-dark-text-muted hover:text-primary-600 dark:hover:text-primary-400 transition-colors"
                >
                  {t(link.locale_key)}
                </a>
              </li>
            ))
          }
        </ul>
      </div>

      <div class="space-y-4">
        <h3
          class="font-semibold text-sm uppercase tracking-wider text-light-text dark:text-dark-text"
        >
          {t("footer.connect")}
        </h3>
        <div class="flex gap-4">
          {
            social.map(({ data }: { data: any }) => (
              <a
                href={data.url}
                target="_blank"
                rel="noopener noreferrer"
                class="w-10 h-10 rounded-full bg-light-elevated dark:bg-dark-elevated flex items-center justify-center text-light-text dark:text-dark-text hover:bg-primary-600 hover:text-white dark:hover:bg-primary-500 transition-all hover:scale-110"
                aria-label={data.name}
              >
                <Icon name={data.icon} size="20" />
              </a>
            ))
          }
        </div>
      </div>
    </div>

    <div
      class="mt-8 pt-8 border-t border-light-border dark:border-dark-border flex flex-col md:flex-row justify-between items-center gap-4"
    >
      <p class="text-sm text-light-text-muted dark:text-dark-text-muted">
        Â© {currentYear}
        {t("personal.fullname")}. {t("footer.rights")}.
      </p>
    </div>
  </div>
</footer>
