---
import { getEntry } from "astro:content";
import { useTranslations, type Language } from "../../utils/i18n";
import { Icon } from "astro-icon/components";

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslations(lang);

const aboutEntry = await getEntry("about", lang);
const languagesEntry = await getEntry("languages", lang);
const { data: about } = aboutEntry;
const {
  data: { languages: languages },
} = languagesEntry;
---

<section id="about" class="py-10">
  <div class="container-custom">
    <h2 class="section-title text-center animate-on-scroll">
      {t("section.about")}
    </h2>

    <div class="max-w-4xl mx-auto space-y-12">
      <div
        class="space-y-6 text-lg text-light-text-muted dark:text-dark-text-muted leading-relaxed animate-on-scroll"
      >
        <p>{about.intro}</p>
        <p>{about.expertise}</p>
        <p>{about.passion}</p>
        <p class="font-medium text-light-text dark:text-dark-text">
          {about.goal}
        </p>
      </div>

      <div class="grid md:grid-cols-2 gap-6 mt-12">
        {
          about.highlights.map((item: any, index: number) => (
            <div
              class={`card card-hover animate-on-scroll`}
              style={`animation-delay: ${index * 100}ms`}
            >
              <div class="flex items-start gap-4">
                <div class="w-12 h-12 rounded-xl bg-primary-100 dark:bg-primary-900/30 flex items-center justify-center flex-shrink-0">
                  <Icon
                    class="w-6 h-6 text-primary-600 dark:text-primary-400"
                    name={item.icon}
                  />
                </div>
                <div>
                  <h3 class="font-semibold text-lg text-light-text dark:text-dark-text mb-2">
                    {item.title}
                  </h3>
                  <p class="text-light-text-muted dark:text-dark-text-muted">
                    {item.description}
                  </p>
                </div>
              </div>
            </div>
          ))
        }
      </div>
      <h3 class="font-bold text-2xl text-center animate-on-scroll mt-10">
        {t("subsection.languages")}
      </h3>
      <div class="grid md:grid-cols-1 gap-4">
        {
          languages.map((language: any) => (
            <div class="card card-hover animate-on-scroll">
              <div class="flex justify-between mb-2">
                <span class="text-md font-medium text-light-text dark:text-dark-text">
                  {language.title}
                </span>
                <span class="text-md text-light-text-muted dark:text-dark-text-muted">
                  {language.description}
                </span>
              </div>
              <div class="h-3 bg-light-elevated dark:bg-dark-elevated rounded-full overflow-hidden">
                <div
                  class="h-full bg-gradient-to-r from-primary-600 to-accent-600 rounded-full transition-all duration-1000"
                  style={`width: ${language.level}%`}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
