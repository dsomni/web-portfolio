---
import { useTranslations, type Language } from "../../utils/i18n";
import { getCollection } from "astro:content";
import ExperienceTimeline from "../ui//ExperienceTimeline.astro";

interface Props {
  lang: Language;
}

const { lang } = Astro.props;
const t = useTranslations(lang);

const experienceEntry = (await getCollection("experience"))
  .filter((entry: any) => entry.id.split(".")[0].endsWith(`-${lang}`))
  .map((entry: any) => entry.data)
  .sort((a: any, b: any) => a.order - b.order);

const researchExperience = experienceEntry.filter(
  (entry: any) => entry.type == "research"
);
const workExperience = experienceEntry.filter(
  (entry: any) => entry.type == "work"
);
const teachingExperience = experienceEntry.filter(
  (entry: any) => entry.type == "teaching"
);
---

<section id="experience" class="py-20 bg-light-surface dark:bg-dark-surface">
  <div class="container-custom">
    <div class="mb-20" id="research-experience">
      <h2 class="section-title text-center animate-on-scroll">
        {t("section.research")}
      </h2>
      <ExperienceTimeline
        experiences={researchExperience}
        colorScheme="primary"
        lang={lang}
      />
    </div>

    <div class="mb-20" id="work-experience">
      <h2 class="section-title text-center animate-on-scroll">
        {t("section.experience")}
      </h2>
      <ExperienceTimeline
        experiences={workExperience}
        colorScheme="accent"
        lang={lang}
      />
    </div>

    <div id="teaching-experience">
      <h2 class="section-title text-center animate-on-scroll">
        {t("section.teaching")}
      </h2>
      <ExperienceTimeline
        experiences={teachingExperience}
        colorScheme="primary"
        lang={lang}
      />
    </div>
  </div>
</section>
